// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// AcademicYearsColumns holds the columns for the "academic_years" table.
	AcademicYearsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "semester", Type: field.TypeString},
	}
	// AcademicYearsTable holds the schema information for the "academic_years" table.
	AcademicYearsTable = &schema.Table{
		Name:        "academic_years",
		Columns:     AcademicYearsColumns,
		PrimaryKey:  []*schema.Column{AcademicYearsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ActivitiesColumns holds the columns for the "activities" table.
	ActivitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "detail", Type: field.TypeString},
		{Name: "location", Type: field.TypeString},
		{Name: "starttime", Type: field.TypeTime},
		{Name: "endtime", Type: field.TypeTime},
		{Name: "AcademicYearID", Type: field.TypeInt, Nullable: true},
		{Name: "ActivityTypeID", Type: field.TypeInt, Nullable: true},
		{Name: "ClubID", Type: field.TypeInt, Nullable: true},
	}
	// ActivitiesTable holds the schema information for the "activities" table.
	ActivitiesTable = &schema.Table{
		Name:       "activities",
		Columns:    ActivitiesColumns,
		PrimaryKey: []*schema.Column{ActivitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "activities_academic_years_activities",
				Columns: []*schema.Column{ActivitiesColumns[6]},

				RefColumns: []*schema.Column{AcademicYearsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "activities_activity_types_activities",
				Columns: []*schema.Column{ActivitiesColumns[7]},

				RefColumns: []*schema.Column{ActivityTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "activities_clubs_activities",
				Columns: []*schema.Column{ActivitiesColumns[8]},

				RefColumns: []*schema.Column{ClubsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ActivityTypesColumns holds the columns for the "activity_types" table.
	ActivityTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// ActivityTypesTable holds the schema information for the "activity_types" table.
	ActivityTypesTable = &schema.Table{
		Name:        "activity_types",
		Columns:     ActivityTypesColumns,
		PrimaryKey:  []*schema.Column{ActivityTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ClubsColumns holds the columns for the "clubs" table.
	ClubsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "purpose", Type: field.TypeString, Size: 100},
		{Name: "phone", Type: field.TypeString, Size: 10},
		{Name: "ClubBranch_ID", Type: field.TypeInt, Nullable: true},
		{Name: "ClubType_ID", Type: field.TypeInt, Nullable: true},
		{Name: "UserID", Type: field.TypeInt, Nullable: true},
	}
	// ClubsTable holds the schema information for the "clubs" table.
	ClubsTable = &schema.Table{
		Name:       "clubs",
		Columns:    ClubsColumns,
		PrimaryKey: []*schema.Column{ClubsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "clubs_club_branches_club",
				Columns: []*schema.Column{ClubsColumns[4]},

				RefColumns: []*schema.Column{ClubBranchesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "clubs_club_types_club",
				Columns: []*schema.Column{ClubsColumns[5]},

				RefColumns: []*schema.Column{ClubTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "clubs_users_club",
				Columns: []*schema.Column{ClubsColumns[6]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ClubBranchesColumns holds the columns for the "club_branches" table.
	ClubBranchesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// ClubBranchesTable holds the schema information for the "club_branches" table.
	ClubBranchesTable = &schema.Table{
		Name:        "club_branches",
		Columns:     ClubBranchesColumns,
		PrimaryKey:  []*schema.Column{ClubBranchesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ClubTypesColumns holds the columns for the "club_types" table.
	ClubTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// ClubTypesTable holds the schema information for the "club_types" table.
	ClubTypesTable = &schema.Table{
		Name:        "club_types",
		Columns:     ClubTypesColumns,
		PrimaryKey:  []*schema.Column{ClubTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ClubappStatusColumns holds the columns for the "clubapp_status" table.
	ClubappStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "clubstatus", Type: field.TypeString, Unique: true},
	}
	// ClubappStatusTable holds the schema information for the "clubapp_status" table.
	ClubappStatusTable = &schema.Table{
		Name:        "clubapp_status",
		Columns:     ClubappStatusColumns,
		PrimaryKey:  []*schema.Column{ClubappStatusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ClubapplicationsColumns holds the columns for the "clubapplications" table.
	ClubapplicationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "contact", Type: field.TypeString},
		{Name: "reason", Type: field.TypeString},
		{Name: "addeddatetime", Type: field.TypeTime},
		{Name: "addername", Type: field.TypeString},
		{Name: "discipline", Type: field.TypeString},
		{Name: "gender", Type: field.TypeString},
		{Name: "age", Type: field.TypeInt},
		{Name: "yaer", Type: field.TypeInt},
		{Name: "ClubID", Type: field.TypeInt, Nullable: true},
		{Name: "clubstatusID", Type: field.TypeInt, Nullable: true},
		{Name: "UserID", Type: field.TypeInt, Nullable: true},
	}
	// ClubapplicationsTable holds the schema information for the "clubapplications" table.
	ClubapplicationsTable = &schema.Table{
		Name:       "clubapplications",
		Columns:    ClubapplicationsColumns,
		PrimaryKey: []*schema.Column{ClubapplicationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "clubapplications_clubs_clubapplication",
				Columns: []*schema.Column{ClubapplicationsColumns[9]},

				RefColumns: []*schema.Column{ClubsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "clubapplications_clubapp_status_clubapplication",
				Columns: []*schema.Column{ClubapplicationsColumns[10]},

				RefColumns: []*schema.Column{ClubappStatusColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "clubapplications_users_clubapplication",
				Columns: []*schema.Column{ClubapplicationsColumns[11]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ComplaintsColumns holds the columns for the "complaints" table.
	ComplaintsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "phonenumber", Type: field.TypeString, Size: 10},
		{Name: "info", Type: field.TypeString},
		{Name: "date", Type: field.TypeTime},
		{Name: "ClubID", Type: field.TypeInt, Nullable: true},
		{Name: "TypeID", Type: field.TypeInt, Nullable: true},
		{Name: "UserID", Type: field.TypeInt, Nullable: true},
	}
	// ComplaintsTable holds the schema information for the "complaints" table.
	ComplaintsTable = &schema.Table{
		Name:       "complaints",
		Columns:    ComplaintsColumns,
		PrimaryKey: []*schema.Column{ComplaintsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "complaints_clubs_ClubToComplaint",
				Columns: []*schema.Column{ComplaintsColumns[5]},

				RefColumns: []*schema.Column{ClubsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "complaints_complaint_types_ComplaintTypeToComplaint",
				Columns: []*schema.Column{ComplaintsColumns[6]},

				RefColumns: []*schema.Column{ComplaintTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "complaints_users_UserToComplaint",
				Columns: []*schema.Column{ComplaintsColumns[7]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ComplaintTypesColumns holds the columns for the "complaint_types" table.
	ComplaintTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "description", Type: field.TypeString},
	}
	// ComplaintTypesTable holds the schema information for the "complaint_types" table.
	ComplaintTypesTable = &schema.Table{
		Name:        "complaint_types",
		Columns:     ComplaintTypesColumns,
		PrimaryKey:  []*schema.Column{ComplaintTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DisciplinesColumns holds the columns for the "disciplines" table.
	DisciplinesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "discipline", Type: field.TypeString, Unique: true},
	}
	// DisciplinesTable holds the schema information for the "disciplines" table.
	DisciplinesTable = &schema.Table{
		Name:        "disciplines",
		Columns:     DisciplinesColumns,
		PrimaryKey:  []*schema.Column{DisciplinesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// GendersColumns holds the columns for the "genders" table.
	GendersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "gender", Type: field.TypeString, Unique: true},
	}
	// GendersTable holds the schema information for the "genders" table.
	GendersTable = &schema.Table{
		Name:        "genders",
		Columns:     GendersColumns,
		PrimaryKey:  []*schema.Column{GendersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PositionsColumns holds the columns for the "positions" table.
	PositionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// PositionsTable holds the schema information for the "positions" table.
	PositionsTable = &schema.Table{
		Name:        "positions",
		Columns:     PositionsColumns,
		PrimaryKey:  []*schema.Column{PositionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PurposesColumns holds the columns for the "purposes" table.
	PurposesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "purpose", Type: field.TypeString},
	}
	// PurposesTable holds the schema information for the "purposes" table.
	PurposesTable = &schema.Table{
		Name:        "purposes",
		Columns:     PurposesColumns,
		PrimaryKey:  []*schema.Column{PurposesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RoomsColumns holds the columns for the "rooms" table.
	RoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "room_name", Type: field.TypeString},
		{Name: "room_location", Type: field.TypeString},
		{Name: "room_floor", Type: field.TypeString},
		{Name: "max_contain", Type: field.TypeInt},
	}
	// RoomsTable holds the schema information for the "rooms" table.
	RoomsTable = &schema.Table{
		Name:        "rooms",
		Columns:     RoomsColumns,
		PrimaryKey:  []*schema.Column{RoomsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RoomusesColumns holds the columns for the "roomuses" table.
	RoomusesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "age", Type: field.TypeInt},
		{Name: "note", Type: field.TypeString, Size: 25},
		{Name: "contact", Type: field.TypeString, Size: 10},
		{Name: "in_time", Type: field.TypeTime},
		{Name: "out_time", Type: field.TypeTime},
		{Name: "purpose_id", Type: field.TypeInt, Nullable: true},
		{Name: "room_id", Type: field.TypeInt, Nullable: true},
		{Name: "UserID", Type: field.TypeInt, Nullable: true},
	}
	// RoomusesTable holds the schema information for the "roomuses" table.
	RoomusesTable = &schema.Table{
		Name:       "roomuses",
		Columns:    RoomusesColumns,
		PrimaryKey: []*schema.Column{RoomusesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "roomuses_purposes_roomuses",
				Columns: []*schema.Column{RoomusesColumns[6]},

				RefColumns: []*schema.Column{PurposesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "roomuses_rooms_roomuses",
				Columns: []*schema.Column{RoomusesColumns[7]},

				RefColumns: []*schema.Column{RoomsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "roomuses_users_Roomuse",
				Columns: []*schema.Column{RoomusesColumns[8]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "age", Type: field.TypeInt},
		{Name: "email", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "ClubID", Type: field.TypeInt, Nullable: true},
		{Name: "discipline_id", Type: field.TypeInt, Nullable: true},
		{Name: "gender_id", Type: field.TypeInt, Nullable: true},
		{Name: "Position_ID", Type: field.TypeInt, Nullable: true},
		{Name: "userstatus_id", Type: field.TypeInt, Nullable: true},
		{Name: "UserTypeID", Type: field.TypeInt, Nullable: true},
		{Name: "year_id", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "users_clubs_userclub",
				Columns: []*schema.Column{UsersColumns[5]},

				RefColumns: []*schema.Column{ClubsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "users_disciplines_users",
				Columns: []*schema.Column{UsersColumns[6]},

				RefColumns: []*schema.Column{DisciplinesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "users_genders_users",
				Columns: []*schema.Column{UsersColumns[7]},

				RefColumns: []*schema.Column{GendersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "users_positions_users",
				Columns: []*schema.Column{UsersColumns[8]},

				RefColumns: []*schema.Column{PositionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "users_user_status_users",
				Columns: []*schema.Column{UsersColumns[9]},

				RefColumns: []*schema.Column{UserStatusColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "users_usertypes_user",
				Columns: []*schema.Column{UsersColumns[10]},

				RefColumns: []*schema.Column{UsertypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "users_years_users",
				Columns: []*schema.Column{UsersColumns[11]},

				RefColumns: []*schema.Column{YearsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserStatusColumns holds the columns for the "user_status" table.
	UserStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "userstatus", Type: field.TypeString, Unique: true},
	}
	// UserStatusTable holds the schema information for the "user_status" table.
	UserStatusTable = &schema.Table{
		Name:        "user_status",
		Columns:     UserStatusColumns,
		PrimaryKey:  []*schema.Column{UserStatusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsertypesColumns holds the columns for the "usertypes" table.
	UsertypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// UsertypesTable holds the schema information for the "usertypes" table.
	UsertypesTable = &schema.Table{
		Name:        "usertypes",
		Columns:     UsertypesColumns,
		PrimaryKey:  []*schema.Column{UsertypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// YearsColumns holds the columns for the "years" table.
	YearsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "year", Type: field.TypeInt, Unique: true},
	}
	// YearsTable holds the schema information for the "years" table.
	YearsTable = &schema.Table{
		Name:        "years",
		Columns:     YearsColumns,
		PrimaryKey:  []*schema.Column{YearsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AcademicYearsTable,
		ActivitiesTable,
		ActivityTypesTable,
		ClubsTable,
		ClubBranchesTable,
		ClubTypesTable,
		ClubappStatusTable,
		ClubapplicationsTable,
		ComplaintsTable,
		ComplaintTypesTable,
		DisciplinesTable,
		GendersTable,
		PositionsTable,
		PurposesTable,
		RoomsTable,
		RoomusesTable,
		UsersTable,
		UserStatusTable,
		UsertypesTable,
		YearsTable,
	}
)

func init() {
	ActivitiesTable.ForeignKeys[0].RefTable = AcademicYearsTable
	ActivitiesTable.ForeignKeys[1].RefTable = ActivityTypesTable
	ActivitiesTable.ForeignKeys[2].RefTable = ClubsTable
	ClubsTable.ForeignKeys[0].RefTable = ClubBranchesTable
	ClubsTable.ForeignKeys[1].RefTable = ClubTypesTable
	ClubsTable.ForeignKeys[2].RefTable = UsersTable
	ClubapplicationsTable.ForeignKeys[0].RefTable = ClubsTable
	ClubapplicationsTable.ForeignKeys[1].RefTable = ClubappStatusTable
	ClubapplicationsTable.ForeignKeys[2].RefTable = UsersTable
	ComplaintsTable.ForeignKeys[0].RefTable = ClubsTable
	ComplaintsTable.ForeignKeys[1].RefTable = ComplaintTypesTable
	ComplaintsTable.ForeignKeys[2].RefTable = UsersTable
	RoomusesTable.ForeignKeys[0].RefTable = PurposesTable
	RoomusesTable.ForeignKeys[1].RefTable = RoomsTable
	RoomusesTable.ForeignKeys[2].RefTable = UsersTable
	UsersTable.ForeignKeys[0].RefTable = ClubsTable
	UsersTable.ForeignKeys[1].RefTable = DisciplinesTable
	UsersTable.ForeignKeys[2].RefTable = GendersTable
	UsersTable.ForeignKeys[3].RefTable = PositionsTable
	UsersTable.ForeignKeys[4].RefTable = UserStatusTable
	UsersTable.ForeignKeys[5].RefTable = UsertypesTable
	UsersTable.ForeignKeys[6].RefTable = YearsTable
}
