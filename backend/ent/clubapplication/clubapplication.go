// Code generated by entc, DO NOT EDIT.

package clubapplication

const (
	// Label holds the string label denoting the clubapplication type in the database.
	Label = "clubapplication"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldContact holds the string denoting the contact field in the database.
	FieldContact = "contact"
	// FieldReason holds the string denoting the reason field in the database.
	FieldReason = "reason"
	// FieldAddeddatetime holds the string denoting the addeddatetime field in the database.
	FieldAddeddatetime = "addeddatetime"
	// FieldAddername holds the string denoting the addername field in the database.
	FieldAddername = "addername"
	// FieldDiscipline holds the string denoting the discipline field in the database.
	FieldDiscipline = "discipline"
	// FieldGender holds the string denoting the gender field in the database.
	FieldGender = "gender"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"
	// FieldYaer holds the string denoting the yaer field in the database.
	FieldYaer = "yaer"

	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// EdgeClubappstatus holds the string denoting the clubappstatus edge name in mutations.
	EdgeClubappstatus = "clubappstatus"
	// EdgeClub holds the string denoting the club edge name in mutations.
	EdgeClub = "club"

	// Table holds the table name of the clubapplication in the database.
	Table = "clubapplications"
	// OwnerTable is the table the holds the owner relation/edge.
	OwnerTable = "clubapplications"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "UserID"
	// ClubappstatusTable is the table the holds the clubappstatus relation/edge.
	ClubappstatusTable = "clubapplications"
	// ClubappstatusInverseTable is the table name for the ClubappStatus entity.
	// It exists in this package in order to avoid circular dependency with the "clubappstatus" package.
	ClubappstatusInverseTable = "clubapp_status"
	// ClubappstatusColumn is the table column denoting the clubappstatus relation/edge.
	ClubappstatusColumn = "clubstatusID"
	// ClubTable is the table the holds the club relation/edge.
	ClubTable = "clubapplications"
	// ClubInverseTable is the table name for the Club entity.
	// It exists in this package in order to avoid circular dependency with the "club" package.
	ClubInverseTable = "clubs"
	// ClubColumn is the table column denoting the club relation/edge.
	ClubColumn = "ClubID"
)

// Columns holds all SQL columns for clubapplication fields.
var Columns = []string{
	FieldID,
	FieldContact,
	FieldReason,
	FieldAddeddatetime,
	FieldAddername,
	FieldDiscipline,
	FieldGender,
	FieldAge,
	FieldYaer,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Clubapplication type.
var ForeignKeys = []string{
	"ClubID",
	"clubstatusID",
	"UserID",
}

var (
	// ContactValidator is a validator for the "contact" field. It is called by the builders before save.
	ContactValidator func(string) error
	// AddernameValidator is a validator for the "addername" field. It is called by the builders before save.
	AddernameValidator func(string) error
	// DisciplineValidator is a validator for the "discipline" field. It is called by the builders before save.
	DisciplineValidator func(string) error
	// GenderValidator is a validator for the "gender" field. It is called by the builders before save.
	GenderValidator func(string) error
	// AgeValidator is a validator for the "age" field. It is called by the builders before save.
	AgeValidator func(int) error
	// YaerValidator is a validator for the "yaer" field. It is called by the builders before save.
	YaerValidator func(int) error
)
