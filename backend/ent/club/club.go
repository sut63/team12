// Code generated by entc, DO NOT EDIT.

package club

const (
	// Label holds the string label denoting the club type in the database.
	Label = "club"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPurpose holds the string denoting the purpose field in the database.
	FieldPurpose = "purpose"

	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeClubtype holds the string denoting the clubtype edge name in mutations.
	EdgeClubtype = "clubtype"
	// EdgeClubbranch holds the string denoting the clubbranch edge name in mutations.
	EdgeClubbranch = "clubbranch"
	// EdgeClubapplication holds the string denoting the clubapplication edge name in mutations.
	EdgeClubapplication = "clubapplication"
	// EdgeClubToComplaint holds the string denoting the clubtocomplaint edge name in mutations.
	EdgeClubToComplaint = "ClubToComplaint"
	// EdgeActivities holds the string denoting the activities edge name in mutations.
	EdgeActivities = "activities"
	// EdgeUserclub holds the string denoting the userclub edge name in mutations.
	EdgeUserclub = "userclub"

	// Table holds the table name of the club in the database.
	Table = "clubs"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "clubs"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "UserID"
	// ClubtypeTable is the table the holds the clubtype relation/edge.
	ClubtypeTable = "clubs"
	// ClubtypeInverseTable is the table name for the ClubType entity.
	// It exists in this package in order to avoid circular dependency with the "clubtype" package.
	ClubtypeInverseTable = "club_types"
	// ClubtypeColumn is the table column denoting the clubtype relation/edge.
	ClubtypeColumn = "ClubType_ID"
	// ClubbranchTable is the table the holds the clubbranch relation/edge.
	ClubbranchTable = "clubs"
	// ClubbranchInverseTable is the table name for the ClubBranch entity.
	// It exists in this package in order to avoid circular dependency with the "clubbranch" package.
	ClubbranchInverseTable = "club_branches"
	// ClubbranchColumn is the table column denoting the clubbranch relation/edge.
	ClubbranchColumn = "ClubBranch_ID"
	// ClubapplicationTable is the table the holds the clubapplication relation/edge.
	ClubapplicationTable = "clubapplications"
	// ClubapplicationInverseTable is the table name for the Clubapplication entity.
	// It exists in this package in order to avoid circular dependency with the "clubapplication" package.
	ClubapplicationInverseTable = "clubapplications"
	// ClubapplicationColumn is the table column denoting the clubapplication relation/edge.
	ClubapplicationColumn = "ClubID"
	// ClubToComplaintTable is the table the holds the ClubToComplaint relation/edge.
	ClubToComplaintTable = "complaints"
	// ClubToComplaintInverseTable is the table name for the Complaint entity.
	// It exists in this package in order to avoid circular dependency with the "complaint" package.
	ClubToComplaintInverseTable = "complaints"
	// ClubToComplaintColumn is the table column denoting the ClubToComplaint relation/edge.
	ClubToComplaintColumn = "ClubID"
	// ActivitiesTable is the table the holds the activities relation/edge.
	ActivitiesTable = "activities"
	// ActivitiesInverseTable is the table name for the Activities entity.
	// It exists in this package in order to avoid circular dependency with the "activities" package.
	ActivitiesInverseTable = "activities"
	// ActivitiesColumn is the table column denoting the activities relation/edge.
	ActivitiesColumn = "ClubID"
	// UserclubTable is the table the holds the userclub relation/edge.
	UserclubTable = "users"
	// UserclubInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserclubInverseTable = "users"
	// UserclubColumn is the table column denoting the userclub relation/edge.
	UserclubColumn = "ClubID"
)

// Columns holds all SQL columns for club fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldPurpose,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Club type.
var ForeignKeys = []string{
	"ClubBranch_ID",
	"ClubType_ID",
	"UserID",
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// PurposeValidator is a validator for the "purpose" field. It is called by the builders before save.
	PurposeValidator func(string) error
)
