basePath: /api/v1
definitions:
  controllers.Clubapplication:
    properties:
      addedtime:
        type: string
      adderAge:
        type: integer
      adderGender:
        type: string
      adderName:
        type: string
      appstatusID:
        type: integer
      clubID:
        type: integer
      contact:
        type: string
      discipline:
        type: string
      reason:
        type: string
      userID:
        type: integer
      year:
        type: integer
    type: object
  controllers.Complaint:
    properties:
      clubID:
        type: integer
      date:
        type: string
      info:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
      typeID:
        type: integer
      userID:
        type: integer
    type: object
  controllers.Complainttype:
    properties:
      description:
        type: string
    type: object
  controllers.Roomuse:
    properties:
      addedTime:
        type: string
      purposeID:
        type: integer
      roomID:
        type: integer
      userID:
        type: integer
    type: object
  ent.AcademicYear:
    properties:
      edges:
        $ref: '#/definitions/ent.AcademicYearEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the AcademicYearQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      semester:
        description: Semester holds the value of the "semester" field.
        type: string
    type: object
  ent.AcademicYearEdges:
    properties:
      activities:
        description: Activities holds the value of the activities edge.
        items:
          $ref: '#/definitions/ent.Activities'
        type: array
    type: object
  ent.Activities:
    properties:
      academicYearID:
        type: integer
      activityTypeID:
        type: integer
      clubID:
        type: integer
      detail:
        description: Detail holds the value of the "detail" field.
        type: string
      edges:
        $ref: '#/definitions/ent.ActivitiesEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ActivitiesQuery when eager-loading is set.
        type: object
      endtime:
        description: Endtime holds the value of the "endtime" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
      starttime:
        description: Starttime holds the value of the "starttime" field.
        type: string
    type: object
  ent.ActivitiesEdges:
    properties:
      academicyear:
        $ref: '#/definitions/ent.AcademicYear'
        description: Academicyear holds the value of the academicyear edge.
        type: object
      activitytype:
        $ref: '#/definitions/ent.ActivityType'
        description: Activitytype holds the value of the activitytype edge.
        type: object
      club:
        $ref: '#/definitions/ent.Club'
        description: Club holds the value of the club edge.
        type: object
    type: object
  ent.ActivityType:
    properties:
      edges:
        $ref: '#/definitions/ent.ActivityTypeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ActivityTypeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.ActivityTypeEdges:
    properties:
      activities:
        description: Activities holds the value of the activities edge.
        items:
          $ref: '#/definitions/ent.Activities'
        type: array
    type: object
  ent.Club:
    properties:
      clubBranch_ID:
        type: integer
      clubType_ID:
        type: integer
      edges:
        $ref: '#/definitions/ent.ClubEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ClubQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
      purpose:
        description: Purpose holds the value of the "purpose" field.
        type: string
      userID:
        type: integer
    type: object
  ent.ClubBranch:
    properties:
      edges:
        $ref: '#/definitions/ent.ClubBranchEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ClubBranchQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.ClubBranchEdges:
    properties:
      club:
        description: Club holds the value of the club edge.
        items:
          $ref: '#/definitions/ent.Club'
        type: array
    type: object
  ent.ClubEdges:
    properties:
      activities:
        description: Activities holds the value of the activities edge.
        items:
          $ref: '#/definitions/ent.Activities'
        type: array
      clubToComplaint:
        description: ClubToComplaint holds the value of the ClubToComplaint edge.
        items:
          $ref: '#/definitions/ent.Complaint'
        type: array
      clubapplication:
        description: Clubapplication holds the value of the clubapplication edge.
        items:
          $ref: '#/definitions/ent.Clubapplication'
        type: array
      clubbranch:
        $ref: '#/definitions/ent.ClubBranch'
        description: Clubbranch holds the value of the clubbranch edge.
        type: object
      clubtype:
        $ref: '#/definitions/ent.ClubType'
        description: Clubtype holds the value of the clubtype edge.
        type: object
      user:
        $ref: '#/definitions/ent.User'
        description: User holds the value of the user edge.
        type: object
      userclub:
        description: Userclub holds the value of the userclub edge.
        items:
          $ref: '#/definitions/ent.User'
        type: array
    type: object
  ent.ClubType:
    properties:
      edges:
        $ref: '#/definitions/ent.ClubTypeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ClubTypeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.ClubTypeEdges:
    properties:
      club:
        description: Club holds the value of the club edge.
        items:
          $ref: '#/definitions/ent.Club'
        type: array
    type: object
  ent.ClubappStatus:
    properties:
      clubstatus:
        description: Clubstatus holds the value of the "clubstatus" field.
        type: string
      edges:
        $ref: '#/definitions/ent.ClubappStatusEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ClubappStatusQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.ClubappStatusEdges:
    properties:
      clubapplication:
        description: Clubapplication holds the value of the clubapplication edge.
        items:
          $ref: '#/definitions/ent.Clubapplication'
        type: array
    type: object
  ent.Clubapplication:
    properties:
      addeddatetime:
        description: Addeddatetime holds the value of the "addeddatetime" field.
        type: string
      addername:
        description: Addername holds the value of the "addername" field.
        type: string
      age:
        description: Age holds the value of the "age" field.
        type: integer
      clubID:
        type: integer
      contact:
        description: Contact holds the value of the "contact" field.
        type: string
      discipline:
        description: Discipline holds the value of the "discipline" field.
        type: string
      edges:
        $ref: '#/definitions/ent.ClubapplicationEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ClubapplicationQuery when eager-loading is set.
        type: object
      gender:
        description: Gender holds the value of the "gender" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      reason:
        description: Reason holds the value of the "reason" field.
        type: string
      userID:
        type: integer
      yaer:
        description: Yaer holds the value of the "yaer" field.
        type: integer
    type: object
  ent.ClubapplicationEdges:
    properties:
      club:
        $ref: '#/definitions/ent.Club'
        description: Club holds the value of the club edge.
        type: object
      clubappstatus:
        $ref: '#/definitions/ent.ClubappStatus'
        description: Clubappstatus holds the value of the clubappstatus edge.
        type: object
      owner:
        $ref: '#/definitions/ent.User'
        description: Owner holds the value of the owner edge.
        type: object
    type: object
  ent.Complaint:
    properties:
      clubID:
        type: integer
      date:
        description: Date holds the value of the "date" field.
        type: string
      edges:
        $ref: '#/definitions/ent.ComplaintEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ComplaintQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      info:
        description: Info holds the value of the "info" field.
        type: string
      name:
        description: Name holds the value of the "name" field.
        type: string
      phonenumber:
        description: Phonenumber holds the value of the "phonenumber" field.
        type: string
      typeID:
        type: integer
      userID:
        type: integer
    type: object
  ent.ComplaintEdges:
    properties:
      complaintToClub:
        $ref: '#/definitions/ent.Club'
        description: ComplaintToClub holds the value of the ComplaintToClub edge.
        type: object
      complaintToComplaintType:
        $ref: '#/definitions/ent.ComplaintType'
        description: ComplaintToComplaintType holds the value of the ComplaintToComplaintType
          edge.
        type: object
      complaintToUser:
        $ref: '#/definitions/ent.User'
        description: ComplaintToUser holds the value of the ComplaintToUser edge.
        type: object
    type: object
  ent.ComplaintType:
    properties:
      description:
        description: Description holds the value of the "description" field.
        type: string
      edges:
        $ref: '#/definitions/ent.ComplaintTypeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ComplaintTypeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.ComplaintTypeEdges:
    properties:
      complaintTypeToComplaint:
        description: ComplaintTypeToComplaint holds the value of the ComplaintTypeToComplaint
          edge.
        items:
          $ref: '#/definitions/ent.Complaint'
        type: array
    type: object
  ent.Discipline:
    properties:
      discipline:
        description: Discipline holds the value of the "discipline" field.
        type: string
      edges:
        $ref: '#/definitions/ent.DisciplineEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DisciplineQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.DisciplineEdges:
    properties:
      users:
        description: Users holds the value of the users edge.
        items:
          $ref: '#/definitions/ent.User'
        type: array
    type: object
  ent.Gender:
    properties:
      edges:
        $ref: '#/definitions/ent.GenderEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the GenderQuery when eager-loading is set.
        type: object
      gender:
        description: Gender holds the value of the "gender" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.GenderEdges:
    properties:
      users:
        description: Users holds the value of the users edge.
        items:
          $ref: '#/definitions/ent.User'
        type: array
    type: object
  ent.Purpose:
    properties:
      edges:
        $ref: '#/definitions/ent.PurposeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PurposeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      purpose:
        description: Purpose holds the value of the "purpose" field.
        type: string
    type: object
  ent.PurposeEdges:
    properties:
      roomuses:
        description: Roomuses holds the value of the roomuses edge.
        items:
          $ref: '#/definitions/ent.Roomuse'
        type: array
    type: object
  ent.Room:
    properties:
      edges:
        $ref: '#/definitions/ent.RoomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RoomQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      max_contain:
        description: MaxContain holds the value of the "max_contain" field.
        type: integer
      room_floor:
        description: RoomFloor holds the value of the "room_floor" field.
        type: string
      room_location:
        description: RoomLocation holds the value of the "room_location" field.
        type: string
      room_name:
        description: RoomName holds the value of the "room_name" field.
        type: string
    type: object
  ent.RoomEdges:
    properties:
      roomuses:
        description: Roomuses holds the value of the roomuses edge.
        items:
          $ref: '#/definitions/ent.Roomuse'
        type: array
    type: object
  ent.Roomuse:
    properties:
      added_time:
        description: AddedTime holds the value of the "added_time" field.
        type: string
      edges:
        $ref: '#/definitions/ent.RoomuseEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RoomuseQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      userID:
        type: integer
    type: object
  ent.RoomuseEdges:
    properties:
      purposes:
        $ref: '#/definitions/ent.Purpose'
        description: Purposes holds the value of the purposes edge.
        type: object
      rooms:
        $ref: '#/definitions/ent.Room'
        description: Rooms holds the value of the rooms edge.
        type: object
      users:
        $ref: '#/definitions/ent.User'
        description: Users holds the value of the users edge.
        type: object
    type: object
  ent.User:
    properties:
      age:
        description: Age holds the value of the "age" field.
        type: integer
      clubID:
        type: integer
      edges:
        $ref: '#/definitions/ent.UserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserQuery when eager-loading is set.
        type: object
      email:
        description: Email holds the value of the "email" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
      password:
        description: Password holds the value of the "password" field.
        type: string
      userTypeID:
        type: integer
    type: object
  ent.UserEdges:
    properties:
      club:
        description: Club holds the value of the club edge.
        items:
          $ref: '#/definitions/ent.Club'
        type: array
      clubapplication:
        description: Clubapplication holds the value of the clubapplication edge.
        items:
          $ref: '#/definitions/ent.Clubapplication'
        type: array
      discipline:
        $ref: '#/definitions/ent.Discipline'
        description: Discipline holds the value of the discipline edge.
        type: object
      fromClub:
        $ref: '#/definitions/ent.Club'
        description: FromClub holds the value of the FromClub edge.
        type: object
      gender:
        $ref: '#/definitions/ent.Gender'
        description: Gender holds the value of the gender edge.
        type: object
      roomuse:
        description: Roomuse holds the value of the Roomuse edge.
        items:
          $ref: '#/definitions/ent.Roomuse'
        type: array
      userToComplaint:
        description: UserToComplaint holds the value of the UserToComplaint edge.
        items:
          $ref: '#/definitions/ent.Complaint'
        type: array
      userstatus:
        $ref: '#/definitions/ent.UserStatus'
        description: Userstatus holds the value of the userstatus edge.
        type: object
      usertype:
        $ref: '#/definitions/ent.Usertype'
        description: Usertype holds the value of the usertype edge.
        type: object
      year:
        $ref: '#/definitions/ent.Year'
        description: Year holds the value of the year edge.
        type: object
    type: object
  ent.UserStatus:
    properties:
      edges:
        $ref: '#/definitions/ent.UserStatusEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserStatusQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      userstatus:
        description: Userstatus holds the value of the "userstatus" field.
        type: string
    type: object
  ent.UserStatusEdges:
    properties:
      users:
        description: Users holds the value of the users edge.
        items:
          $ref: '#/definitions/ent.User'
        type: array
    type: object
  ent.Usertype:
    properties:
      edges:
        $ref: '#/definitions/ent.UsertypeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UsertypeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.UsertypeEdges:
    properties:
      user:
        description: User holds the value of the user edge.
        items:
          $ref: '#/definitions/ent.User'
        type: array
    type: object
  ent.Year:
    properties:
      edges:
        $ref: '#/definitions/ent.YearEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the YearQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      year:
        description: Year holds the value of the "year" field.
        type: integer
    type: object
  ent.YearEdges:
    properties:
      users:
        description: Users holds the value of the users edge.
        items:
          $ref: '#/definitions/ent.User'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API
  version: "1.0"
paths:
  /AcademicYears:
    get:
      description: list AcademicYear entities
      operationId: list-AcademicYear
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.AcademicYear'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List AcademicYear entities
    post:
      consumes:
      - application/json
      description: Create AcademicYear
      operationId: create-AcademicYear
      parameters:
      - description: AcademicYear entity
        in: body
        name: AcademicYear
        required: true
        schema:
          $ref: '#/definitions/ent.AcademicYear'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.AcademicYear'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create AcademicYear
  /AcademicYears/{id}:
    delete:
      description: get AcademicYear by ID
      operationId: delete-AcademicYear
      parameters:
      - description: AcademicYear ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a AcademicYear entity by ID
    get:
      description: get AcademicYear by ID
      operationId: get-AcademicYear
      parameters:
      - description: AcademicYear ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.AcademicYear'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a AcademicYear entity by ID
    put:
      consumes:
      - application/json
      description: update AcademicYear by ID
      operationId: update-AcademicYear
      parameters:
      - description: AcademicYear ID
        in: path
        name: id
        required: true
        type: integer
      - description: AcademicYear entity
        in: body
        name: AcademicYear
        required: true
        schema:
          $ref: '#/definitions/ent.AcademicYear'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.AcademicYear'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a AcademicYear entity by ID
  /Activities/{id}:
    put:
      consumes:
      - application/json
      description: update Activities by ID
      operationId: update-Activities
      parameters:
      - description: Activities ID
        in: path
        name: id
        required: true
        type: integer
      - description: Activities entity
        in: body
        name: Activities
        required: true
        schema:
          $ref: '#/definitions/ent.Activities'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Activities'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a Activities entity by ID
  /ActivityTypes:
    get:
      description: list ActivityType entities
      operationId: list-ActivityType
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.ActivityType'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List ActivityType entities
    post:
      consumes:
      - application/json
      description: Create ActivityType
      operationId: create-ActivityType
      parameters:
      - description: ActivityType entity
        in: body
        name: ActivityType
        required: true
        schema:
          $ref: '#/definitions/ent.ActivityType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ActivityType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create ActivityType
  /ActivityTypes/{id}:
    delete:
      description: get ActivityType by ID
      operationId: delete-ActivityType
      parameters:
      - description: ActivityType ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a ActivityType entity by ID
    get:
      description: get ActivityType by ID
      operationId: get-ActivityType
      parameters:
      - description: ActivityType ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ActivityType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a ActivityType entity by ID
    put:
      consumes:
      - application/json
      description: update ActivityType by ID
      operationId: update-ActivityType
      parameters:
      - description: ActivityType ID
        in: path
        name: id
        required: true
        type: integer
      - description: ActivityType entity
        in: body
        name: ActivityType
        required: true
        schema:
          $ref: '#/definitions/ent.ActivityType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ActivityType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a ActivityType entity by ID
  /activities:
    get:
      description: list activities entities
      operationId: list-activities
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Activities'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List activities entities
    post:
      consumes:
      - application/json
      description: Create activities
      operationId: create-activities
      parameters:
      - description: Activities entity
        in: body
        name: activities
        required: true
        schema:
          $ref: '#/definitions/ent.Activities'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Activities'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create activities
  /activities/{id}:
    delete:
      description: get activities by ID
      operationId: delete-activities
      parameters:
      - description: Activities ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a activities entity by ID
    get:
      description: get Activities by ID
      operationId: get-Activities
      parameters:
      - description: Activities ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Activities'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Activities entity by ID
  /club:
    get:
      description: list club entities
      operationId: list-club
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Club'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List club entities
    post:
      consumes:
      - application/json
      description: Create club
      operationId: create-club
      parameters:
      - description: Club entity
        in: body
        name: club
        required: true
        schema:
          $ref: '#/definitions/ent.Club'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Club'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create club
  /club/{id}:
    delete:
      description: get club by ID
      operationId: delete-club
      parameters:
      - description: Club ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a club entity by ID
    get:
      description: get club by ID
      operationId: get-club
      parameters:
      - description: Club ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Club'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a club entity by ID
    put:
      consumes:
      - application/json
      description: update club by ID
      operationId: update-club
      parameters:
      - description: Club ID
        in: path
        name: id
        required: true
        type: integer
      - description: Club entity
        in: body
        name: club
        required: true
        schema:
          $ref: '#/definitions/ent.Club'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Club'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a club entity by ID
  /clubapplications:
    get:
      description: list clubapplication entities
      operationId: list-clubapplication
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Clubapplication'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List clubapplication entities
    post:
      consumes:
      - application/json
      description: Create clubapplication
      operationId: create-clubapplication
      parameters:
      - description: Clubapplication entity
        in: body
        name: clubapplication
        required: true
        schema:
          $ref: '#/definitions/controllers.Clubapplication'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Clubapplication'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create clubapplication
  /clubapplications/{id}:
    delete:
      description: get clubapplication by ID
      operationId: delete-clubapplication
      parameters:
      - description: Clubapplication ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a clubapplication entity by ID
    get:
      description: get clubapplication by ID
      operationId: get-clubapplication
      parameters:
      - description: Clubapplication ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Clubapplication'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a clubapplication entity by ID
    put:
      consumes:
      - application/json
      description: update clubapplication by ID
      operationId: update-clubapplication
      parameters:
      - description: Clubapplication ID
        in: path
        name: id
        required: true
        type: integer
      - description: Clubapplication entity
        in: body
        name: clubapplication
        required: true
        schema:
          $ref: '#/definitions/ent.Clubapplication'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Clubapplication'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a clubapplication entity by ID
  /clubappstatuss:
    get:
      description: list clubappstatus entities
      operationId: list-clubappstatus
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.ClubappStatus'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List clubappstatus entities
    post:
      consumes:
      - application/json
      description: Create clubappstatus
      operationId: create-clubappstatus
      parameters:
      - description: ClubappStatus entity
        in: body
        name: clubappstatus
        required: true
        schema:
          $ref: '#/definitions/ent.ClubappStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ClubappStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create clubappstatus
  /clubappstatuss/{id}:
    delete:
      description: get clubappstatus by ID
      operationId: delete-clubappstatus
      parameters:
      - description: ClubappStatus ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a clubappstatus entity by ID
    get:
      description: get clubappstatus by ID
      operationId: get-clubappstatus
      parameters:
      - description: ClubappStatus ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ClubappStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a clubappstatus entity by ID
    put:
      consumes:
      - application/json
      description: update clubappstatus by ID
      operationId: update-clubappstatus
      parameters:
      - description: ClubappStatus ID
        in: path
        name: id
        required: true
        type: integer
      - description: ClubappStatus entity
        in: body
        name: clubappstatus
        required: true
        schema:
          $ref: '#/definitions/ent.ClubappStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ClubappStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a clubappstatus entity by ID
  /clubbranch:
    get:
      description: list clubbranch entities
      operationId: list-clubbranch
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.ClubBranch'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List clubbranch entities
    post:
      consumes:
      - application/json
      description: Create clubbranch
      operationId: create-clubbranch
      parameters:
      - description: ClubBranch entity
        in: body
        name: clubbranch
        required: true
        schema:
          $ref: '#/definitions/ent.ClubBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ClubBranch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create ClubBranch
  /clubbranch/{id}:
    delete:
      description: get clubbranch by ID
      operationId: delete-clubbranch
      parameters:
      - description: ClubBranch ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a clubbranch entity by ID
    get:
      description: get clubbranch by ID
      operationId: get-clubbranch
      parameters:
      - description: ClubBranch ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ClubBranch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a clubbranch entity by ID
    put:
      consumes:
      - application/json
      description: update clubbranch by ID
      operationId: update-clubbranch
      parameters:
      - description: ClubBranch ID
        in: path
        name: id
        required: true
        type: integer
      - description: ClubBranch entity
        in: body
        name: clubbranch
        required: true
        schema:
          $ref: '#/definitions/ent.ClubBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ClubBranch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a clubbranch entity by ID
  /clubtype:
    get:
      description: list clubtype entities
      operationId: list-clubtype
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.ClubType'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List clubtype entities
    post:
      consumes:
      - application/json
      description: Create clubtype
      operationId: create-clubtype
      parameters:
      - description: ClubType entity
        in: body
        name: clubtype
        required: true
        schema:
          $ref: '#/definitions/ent.ClubType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ClubType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create ClubType
  /clubtype/{id}:
    delete:
      description: get clubtype by ID
      operationId: delete-clubtype
      parameters:
      - description: ClubType ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a clubtype entity by ID
    get:
      description: get clubtype by ID
      operationId: get-clubtype
      parameters:
      - description: ClubType ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ClubType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a clubtype entity by ID
    put:
      consumes:
      - application/json
      description: update clubtype by ID
      operationId: update-clubtype
      parameters:
      - description: ClubType ID
        in: path
        name: id
        required: true
        type: integer
      - description: ClubType entity
        in: body
        name: clubtype
        required: true
        schema:
          $ref: '#/definitions/ent.ClubType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ClubType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a clubtype entity by ID
  /complaints:
    get:
      description: list complaint entities
      operationId: list-complaint
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Complaint'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List complaint entities
    post:
      consumes:
      - application/json
      description: Create complaint
      operationId: create-complaint
      parameters:
      - description: Complaint entity
        in: body
        name: complaint
        required: true
        schema:
          $ref: '#/definitions/controllers.Complaint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Complaint'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create complaint
  /complaints/{id}:
    delete:
      description: get complaint by ID
      operationId: delete-complaint
      parameters:
      - description: Complaint ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a complaint entity by ID
    get:
      description: get complaint by ID
      operationId: get-complaint
      parameters:
      - description: Complaint ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Complaint'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a complaint entity by ID
    put:
      consumes:
      - application/json
      description: update complaint by ID
      operationId: update-complaint
      parameters:
      - description: Complaint ID
        in: path
        name: id
        required: true
        type: integer
      - description: Complaint entity
        in: body
        name: complaint
        required: true
        schema:
          $ref: '#/definitions/ent.Complaint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Complaint'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a complaint entity by ID
  /complainttypes:
    get:
      description: list complainttype entities
      operationId: list-complainttype
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.ComplaintType'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List complainttype entities
    post:
      consumes:
      - application/json
      description: Create complainttype
      operationId: create-complainttype
      parameters:
      - description: Complainttype entity
        in: body
        name: complainttype
        required: true
        schema:
          $ref: '#/definitions/controllers.Complainttype'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ComplaintType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create complainttype
  /complainttypes/{id}:
    delete:
      description: get complainttype by ID
      operationId: delete-complainttype
      parameters:
      - description: Complainttype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a complainttype entity by ID
    get:
      description: get complainttype by ID
      operationId: get-complainttype
      parameters:
      - description: Complainttype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ComplaintType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a complainttype entity by ID
    put:
      consumes:
      - application/json
      description: update complainttype by ID
      operationId: update-complainttype
      parameters:
      - description: Complainttype ID
        in: path
        name: id
        required: true
        type: integer
      - description: Complainttype entity
        in: body
        name: complainttype
        required: true
        schema:
          $ref: '#/definitions/ent.ComplaintType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ComplaintType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a complainttype entity by ID
  /disciplines:
    get:
      description: list discipline entities
      operationId: list-discipline
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Discipline'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List discipline entities
    post:
      consumes:
      - application/json
      description: Create discipline
      operationId: create-discipline
      parameters:
      - description: Discipline entity
        in: body
        name: discipline
        required: true
        schema:
          $ref: '#/definitions/ent.Discipline'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Discipline'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create discipline
  /disciplines/{id}:
    delete:
      description: get discipline by ID
      operationId: delete-discipline
      parameters:
      - description: Discipline ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a discipline entity by ID
    get:
      description: get discipline by ID
      operationId: get-discipline
      parameters:
      - description: Discipline ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Discipline'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a discipline entity by ID
    put:
      consumes:
      - application/json
      description: update discipline by ID
      operationId: update-discipline
      parameters:
      - description: Discipline ID
        in: path
        name: id
        required: true
        type: integer
      - description: Discipline entity
        in: body
        name: discipline
        required: true
        schema:
          $ref: '#/definitions/ent.Discipline'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Discipline'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a discipline entity by ID
  /genders:
    get:
      description: list gender entities
      operationId: list-gender
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Gender'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List gender entities
    post:
      consumes:
      - application/json
      description: Create gender
      operationId: create-gender
      parameters:
      - description: Gender entity
        in: body
        name: gender
        required: true
        schema:
          $ref: '#/definitions/ent.Gender'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Gender'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create gender
  /genders/{id}:
    delete:
      description: get gender by ID
      operationId: delete-gender
      parameters:
      - description: Gender ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a gender entity by ID
    get:
      description: get gender by ID
      operationId: get-gender
      parameters:
      - description: Gender ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Gender'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a gender entity by ID
    put:
      consumes:
      - application/json
      description: update gender by ID
      operationId: update-gender
      parameters:
      - description: Gender ID
        in: path
        name: id
        required: true
        type: integer
      - description: Gender entity
        in: body
        name: gender
        required: true
        schema:
          $ref: '#/definitions/ent.Gender'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Gender'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a gender entity by ID
  /purposes:
    get:
      description: list purpose entities
      operationId: list-purpose
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Purpose'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List purpose entities
    post:
      consumes:
      - application/json
      description: Create purpose
      operationId: create-purpose
      parameters:
      - description: Purpose entity
        in: body
        name: purpose
        required: true
        schema:
          $ref: '#/definitions/ent.Purpose'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Purpose'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create purpose
  /purposes/{id}:
    delete:
      description: get purpose by ID
      operationId: delete-purpose
      parameters:
      - description: Purpose ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a purpose entity by ID
    get:
      description: get purpose by ID
      operationId: get-purpose
      parameters:
      - description: Purpose ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Purpose'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a purpose entity by ID
    put:
      consumes:
      - application/json
      description: update purpose by ID
      operationId: update-purpose
      parameters:
      - description: Purpose ID
        in: path
        name: id
        required: true
        type: integer
      - description: Purpose entity
        in: body
        name: purpose
        required: true
        schema:
          $ref: '#/definitions/ent.Purpose'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Purpose'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a purpose entity by ID
  /rooms:
    get:
      description: list room entities
      operationId: list-room
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Room'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List room entities
    post:
      consumes:
      - application/json
      description: Create room
      operationId: create-room
      parameters:
      - description: Room entity
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/ent.Room'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create room
  /rooms/{id}:
    delete:
      description: get room by ID
      operationId: delete-room
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a room entity by ID
    get:
      description: get room by ID
      operationId: get-room
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a room entity by ID
    put:
      consumes:
      - application/json
      description: update room by ID
      operationId: update-room
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      - description: Room entity
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/ent.Room'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a room entity by ID
  /roomuses:
    get:
      description: list roomuse entities
      operationId: list-roomuse
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Roomuse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List roomuse entities
    post:
      consumes:
      - application/json
      description: Create roomuse
      operationId: create-roomuse
      parameters:
      - description: Roomuse entity
        in: body
        name: roomuse
        required: true
        schema:
          $ref: '#/definitions/controllers.Roomuse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Roomuse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create roomuse
  /roomuses/{id}:
    delete:
      description: get roomuse by ID
      operationId: delete-roomuse
      parameters:
      - description: Roomuse ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a roomuse entity by ID
  /users:
    get:
      description: list user entities
      operationId: list-user
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List user entities
    post:
      consumes:
      - application/json
      description: Create user
      operationId: create-user
      parameters:
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create user
  /users/{id}:
    delete:
      description: get user by ID
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a user entity by ID
    get:
      description: get user by ID
      operationId: get-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a user entity by ID
    put:
      consumes:
      - application/json
      description: update user by ID
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a user entity by ID
  /userstatuss:
    get:
      description: list userstatus entities
      operationId: list-userstatus
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.UserStatus'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List userstatus entities
    post:
      consumes:
      - application/json
      description: Create userstatus
      operationId: create-userstatus
      parameters:
      - description: UserStatus entity
        in: body
        name: userstatus
        required: true
        schema:
          $ref: '#/definitions/ent.UserStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.UserStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create userstatus
  /userstatuss/{id}:
    delete:
      description: get userstatus by ID
      operationId: delete-userstatus
      parameters:
      - description: UserStatus ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a userstatus entity by ID
    get:
      description: get userstatus by ID
      operationId: get-userstatus
      parameters:
      - description: UserStatus ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.UserStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a userstatus entity by ID
    put:
      consumes:
      - application/json
      description: update userstatus by ID
      operationId: update-userstatus
      parameters:
      - description: UserStatus ID
        in: path
        name: id
        required: true
        type: integer
      - description: UserStatus entity
        in: body
        name: userstatus
        required: true
        schema:
          $ref: '#/definitions/ent.UserStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.UserStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a userstatus entity by ID
  /usertypes:
    get:
      description: list usertype entities
      operationId: list-usertype
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Usertype'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List usertype entities
    post:
      consumes:
      - application/json
      description: Create usertype
      operationId: create-usertype
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Usertype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create usertype
  /usertypes/{id}:
    get:
      description: get usertype by ID
      operationId: get-usertype
      parameters:
      - description: Usertype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Usertype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a usertype entity by ID
    put:
      consumes:
      - application/json
      description: update usertype by ID
      operationId: update-usertype
      parameters:
      - description: Usertype ID
        in: path
        name: id
        required: true
        type: integer
      - description: Usertype entity
        in: body
        name: usertype
        required: true
        schema:
          $ref: '#/definitions/ent.Usertype'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Usertype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a usertype entity by ID
  /years:
    get:
      description: list year entities
      operationId: list-year
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Year'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List year entities
    post:
      consumes:
      - application/json
      description: Create year
      operationId: create-year
      parameters:
      - description: Year entity
        in: body
        name: year
        required: true
        schema:
          $ref: '#/definitions/ent.Year'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Year'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create year
  /years/{id}:
    delete:
      description: get year by ID
      operationId: delete-year
      parameters:
      - description: Year ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a year entity by ID
    get:
      description: get year by ID
      operationId: get-year
      parameters:
      - description: Year ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Year'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a year entity by ID
    put:
      consumes:
      - application/json
      description: update year by ID
      operationId: update-year
      parameters:
      - description: Year ID
        in: path
        name: id
        required: true
        type: integer
      - description: Year entity
        in: body
        name: year
        required: true
        schema:
          $ref: '#/definitions/ent.Year'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Year'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a year entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    authorizationUrl: ""
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    authorizationUrl: ""
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
