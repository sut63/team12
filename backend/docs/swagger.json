{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for SUT SE 2563",
        "title": "SUT SA Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/AcademicYears": {
            "get": {
                "description": "list AcademicYear entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List AcademicYear entities",
                "operationId": "list-AcademicYear",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.AcademicYear"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create AcademicYear",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create AcademicYear",
                "operationId": "create-AcademicYear",
                "parameters": [
                    {
                        "description": "AcademicYear entity",
                        "name": "AcademicYear",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.AcademicYear"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.AcademicYear"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/AcademicYears/{id}": {
            "get": {
                "description": "get AcademicYear by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a AcademicYear entity by ID",
                "operationId": "get-AcademicYear",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "AcademicYear ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.AcademicYear"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update AcademicYear by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a AcademicYear entity by ID",
                "operationId": "update-AcademicYear",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "AcademicYear ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AcademicYear entity",
                        "name": "AcademicYear",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.AcademicYear"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.AcademicYear"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get AcademicYear by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a AcademicYear entity by ID",
                "operationId": "delete-AcademicYear",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "AcademicYear ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/Activitiess": {
            "get": {
                "description": "list Activities entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List Activities entities",
                "operationId": "list-Activities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Activities"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Activities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Activities",
                "operationId": "create-Activities",
                "parameters": [
                    {
                        "description": "Activities entity",
                        "name": "Activities",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Activities"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Activities"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/Activitiess/{id}": {
            "get": {
                "description": "get Activities by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a Activities entity by ID",
                "operationId": "get-Activities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Activities ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Activities"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update Activities by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a Activities entity by ID",
                "operationId": "update-Activities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Activities ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Activities entity",
                        "name": "Activities",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Activities"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Activities"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get Activities by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a Activities entity by ID",
                "operationId": "delete-Activities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Activities ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/ActivityTypes": {
            "get": {
                "description": "list ActivityType entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List ActivityType entities",
                "operationId": "list-ActivityType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ActivityType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create ActivityType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create ActivityType",
                "operationId": "create-ActivityType",
                "parameters": [
                    {
                        "description": "ActivityType entity",
                        "name": "ActivityType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ActivityType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ActivityType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/ActivityTypes/{id}": {
            "get": {
                "description": "get ActivityType by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a ActivityType entity by ID",
                "operationId": "get-ActivityType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ActivityType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ActivityType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update ActivityType by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a ActivityType entity by ID",
                "operationId": "update-ActivityType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ActivityType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ActivityType entity",
                        "name": "ActivityType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ActivityType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ActivityType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get ActivityType by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a ActivityType entity by ID",
                "operationId": "delete-ActivityType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ActivityType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "list user entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List user entities",
                "operationId": "list-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create user",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "User entity",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "get user by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a user entity by ID",
                "operationId": "get-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a user entity by ID",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User entity",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get user by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a user entity by ID",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/usertypes": {
            "get": {
                "description": "list usertype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List usertype entities",
                "operationId": "list-usertype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Usertype"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create usertype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create usertype",
                "operationId": "create-usertype",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Usertype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/usertypes/{id}": {
            "get": {
                "description": "get usertype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a usertype entity by ID",
                "operationId": "get-usertype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Usertype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Usertype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update usertype by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a usertype entity by ID",
                "operationId": "update-usertype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Usertype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Usertype entity",
                        "name": "usertype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Usertype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Usertype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ent.AcademicYear": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the AcademicYearQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.AcademicYearEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "semester": {
                    "description": "Semester holds the value of the \"semester\" field.",
                    "type": "string"
                }
            }
        },
        "ent.AcademicYearEdges": {
            "type": "object",
            "properties": {
                "activities": {
                    "description": "Activities holds the value of the activities edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Activities"
                    }
                }
            }
        },
        "ent.Activities": {
            "type": "object",
            "properties": {
                "academicYearID": {
                    "type": "integer"
                },
                "activityTypeID": {
                    "type": "integer"
                },
                "detail": {
                    "description": "Detail holds the value of the \"detail\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ActivitiesQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ActivitiesEdges"
                },
                "endtime": {
                    "description": "Endtime holds the value of the \"endtime\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "starttime": {
                    "description": "Starttime holds the value of the \"starttime\" field.",
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "ent.ActivitiesEdges": {
            "type": "object",
            "properties": {
                "academicyear": {
                    "description": "Academicyear holds the value of the academicyear edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.AcademicYear"
                },
                "activitytype": {
                    "description": "Activitytype holds the value of the activitytype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ActivityType"
                },
                "user": {
                    "description": "User holds the value of the user edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.ActivityType": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ActivityTypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ActivityTypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ActivityTypeEdges": {
            "type": "object",
            "properties": {
                "activities": {
                    "description": "Activities holds the value of the activities edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Activities"
                    }
                }
            }
        },
        "ent.Club": {
            "type": "object",
            "properties": {
                "clubBranch_ID": {
                    "type": "integer"
                },
                "clubType_ID": {
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ClubQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubEdges"
                },
                "foundingdate": {
                    "description": "Foundingdate holds the value of the \"foundingdate\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "purpose": {
                    "description": "Purpose holds the value of the \"purpose\" field.",
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "ent.ClubBranch": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ClubBranchQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubBranchEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ClubBranchEdges": {
            "type": "object",
            "properties": {
                "club": {
                    "description": "Club holds the value of the club edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Club"
                    }
                }
            }
        },
        "ent.ClubEdges": {
            "type": "object",
            "properties": {
                "clubToComplaint": {
                    "description": "ClubToComplaint holds the value of the ClubToComplaint edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Complaint"
                    }
                },
                "clubapplication": {
                    "description": "Clubapplication holds the value of the clubapplication edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Clubapplication"
                    }
                },
                "clubbranch": {
                    "description": "Clubbranch holds the value of the clubbranch edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubBranch"
                },
                "clubtype": {
                    "description": "Clubtype holds the value of the clubtype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubType"
                },
                "user": {
                    "description": "User holds the value of the user edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.ClubType": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ClubTypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubTypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ClubTypeEdges": {
            "type": "object",
            "properties": {
                "club": {
                    "description": "Club holds the value of the club edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Club"
                    }
                }
            }
        },
        "ent.ClubappStatus": {
            "type": "object",
            "properties": {
                "apply_status": {
                    "description": "ApplyStatus holds the value of the \"apply_status\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ClubappStatusQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubappStatusEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ClubappStatusEdges": {
            "type": "object",
            "properties": {
                "clubapplication": {
                    "description": "Clubapplication holds the value of the clubapplication edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Clubapplication"
                    }
                }
            }
        },
        "ent.Clubapplication": {
            "type": "object",
            "properties": {
                "applyname": {
                    "description": "Applyname holds the value of the \"applyname\" field.",
                    "type": "string"
                },
                "clubID": {
                    "type": "integer"
                },
                "contact": {
                    "description": "Contact holds the value of the \"contact\" field.",
                    "type": "string"
                },
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ClubapplicationQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubapplicationEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "reason": {
                    "description": "Reason holds the value of the \"reason\" field.",
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "ent.ClubapplicationEdges": {
            "type": "object",
            "properties": {
                "club": {
                    "description": "Club holds the value of the club edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Club"
                },
                "clubappstatus": {
                    "description": "Clubappstatus holds the value of the clubappstatus edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubappStatus"
                },
                "owner": {
                    "description": "Owner holds the value of the owner edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Complaint": {
            "type": "object",
            "properties": {
                "clubID": {
                    "type": "integer"
                },
                "date": {
                    "description": "Date holds the value of the \"date\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ComplaintQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ComplaintEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "info": {
                    "description": "Info holds the value of the \"info\" field.",
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "ent.ComplaintEdges": {
            "type": "object",
            "properties": {
                "complaintToClub": {
                    "description": "ComplaintToClub holds the value of the ComplaintToClub edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Club"
                },
                "complaintToComplaintType": {
                    "description": "ComplaintToComplaintType holds the value of the ComplaintToComplaintType edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ComplaintType"
                },
                "complaintToUser": {
                    "description": "ComplaintToUser holds the value of the ComplaintToUser edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.ComplaintType": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description holds the value of the \"description\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ComplaintTypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ComplaintTypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ComplaintTypeEdges": {
            "type": "object",
            "properties": {
                "complaintTypeToComplaint": {
                    "description": "ComplaintTypeToComplaint holds the value of the ComplaintTypeToComplaint edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Complaint"
                    }
                }
            }
        },
        "ent.Room": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RoomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RoomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "max_contain": {
                    "description": "MaxContain holds the value of the \"max_contain\" field.",
                    "type": "integer"
                },
                "room_floor": {
                    "description": "RoomFloor holds the value of the \"room_floor\" field.",
                    "type": "string"
                },
                "room_location": {
                    "description": "RoomLocation holds the value of the \"room_location\" field.",
                    "type": "string"
                },
                "room_name": {
                    "description": "RoomName holds the value of the \"room_name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.RoomEdges": {
            "type": "object",
            "properties": {
                "roomuses": {
                    "description": "Roomuses holds the value of the roomuses edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Roomuse"
                    }
                }
            }
        },
        "ent.Roompurpose": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RoompurposeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RoompurposeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "purpose": {
                    "description": "Purpose holds the value of the \"purpose\" field.",
                    "type": "string"
                }
            }
        },
        "ent.RoompurposeEdges": {
            "type": "object",
            "properties": {
                "roompurpose": {
                    "description": "Roompurpose holds the value of the roompurpose edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Roomuse"
                    }
                }
            }
        },
        "ent.Roomuse": {
            "type": "object",
            "properties": {
                "added_time": {
                    "description": "AddedTime holds the value of the \"added_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RoomuseQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RoomuseEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "ent.RoomuseEdges": {
            "type": "object",
            "properties": {
                "purposes": {
                    "description": "Purposes holds the value of the purposes edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Roompurpose"
                },
                "rooms": {
                    "description": "Rooms holds the value of the rooms edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Room"
                },
                "users": {
                    "description": "Users holds the value of the users edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.User": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the UserQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.UserEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "integer"
                },
                "userTypeID": {
                    "type": "integer"
                }
            }
        },
        "ent.UserEdges": {
            "type": "object",
            "properties": {
                "activities": {
                    "description": "Activities holds the value of the activities edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Activities"
                    }
                },
                "club": {
                    "description": "Club holds the value of the club edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Club"
                    }
                },
                "clubapplication": {
                    "description": "Clubapplication holds the value of the clubapplication edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Clubapplication"
                    }
                },
                "roomuse": {
                    "description": "Roomuse holds the value of the Roomuse edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Roomuse"
                    }
                },
                "userToComplaint": {
                    "description": "UserToComplaint holds the value of the UserToComplaint edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Complaint"
                    }
                },
                "usertype": {
                    "description": "Usertype holds the value of the usertype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Usertype"
                }
            }
        },
        "ent.Usertype": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the UsertypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.UsertypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.UsertypeEdges": {
            "type": "object",
            "properties": {
                "user": {
                    "description": "User holds the value of the user edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}