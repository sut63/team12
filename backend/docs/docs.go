// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/AcademicYears": {
            "get": {
                "description": "list AcademicYear entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List AcademicYear entities",
                "operationId": "list-AcademicYear",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.AcademicYear"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create AcademicYear",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create AcademicYear",
                "operationId": "create-AcademicYear",
                "parameters": [
                    {
                        "description": "AcademicYear entity",
                        "name": "AcademicYear",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.AcademicYear"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.AcademicYear"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/AcademicYears/{id}": {
            "get": {
                "description": "get AcademicYear by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a AcademicYear entity by ID",
                "operationId": "get-AcademicYear",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "AcademicYear ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.AcademicYear"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update AcademicYear by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a AcademicYear entity by ID",
                "operationId": "update-AcademicYear",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "AcademicYear ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AcademicYear entity",
                        "name": "AcademicYear",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.AcademicYear"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.AcademicYear"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get AcademicYear by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a AcademicYear entity by ID",
                "operationId": "delete-AcademicYear",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "AcademicYear ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/Activities/{id}": {
            "put": {
                "description": "update Activities by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a Activities entity by ID",
                "operationId": "update-Activities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Activities ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Activities entity",
                        "name": "Activities",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Activities"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Activities"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/ActivityTypes": {
            "get": {
                "description": "list ActivityType entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List ActivityType entities",
                "operationId": "list-ActivityType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ActivityType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create ActivityType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create ActivityType",
                "operationId": "create-ActivityType",
                "parameters": [
                    {
                        "description": "ActivityType entity",
                        "name": "ActivityType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ActivityType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ActivityType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/ActivityTypes/{id}": {
            "get": {
                "description": "get ActivityType by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a ActivityType entity by ID",
                "operationId": "get-ActivityType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ActivityType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ActivityType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update ActivityType by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a ActivityType entity by ID",
                "operationId": "update-ActivityType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ActivityType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ActivityType entity",
                        "name": "ActivityType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ActivityType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ActivityType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get ActivityType by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a ActivityType entity by ID",
                "operationId": "delete-ActivityType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ActivityType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/activities": {
            "get": {
                "description": "list activities entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List activities entities",
                "operationId": "list-activities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Activities"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create activities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create activities",
                "operationId": "create-activities",
                "parameters": [
                    {
                        "description": "Activities entity",
                        "name": "activities",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Activities"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Activities"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/activities/{id}": {
            "get": {
                "description": "get activities by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a activities entity by ID",
                "operationId": "get-activities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Activities ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Activities"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get activities by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a activities entity by ID",
                "operationId": "delete-activities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Activities ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/club": {
            "get": {
                "description": "list club entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List club entities",
                "operationId": "list-club",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Club"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create club",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create club",
                "operationId": "create-club",
                "parameters": [
                    {
                        "description": "Club entity",
                        "name": "club",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Club"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Club"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/club/{id}": {
            "get": {
                "description": "get club by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a club entity by ID",
                "operationId": "get-club",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Club ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Club"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update club by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a club entity by ID",
                "operationId": "update-club",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Club ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Club entity",
                        "name": "club",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Club"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Club"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get club by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a club entity by ID",
                "operationId": "delete-club",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Club ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/clubapplications": {
            "get": {
                "description": "list clubapplication entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List clubapplication entities",
                "operationId": "list-clubapplication",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Clubapplication"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create clubapplication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create clubapplication",
                "operationId": "create-clubapplication",
                "parameters": [
                    {
                        "description": "Clubapplication entity",
                        "name": "clubapplication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Clubapplication"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Clubapplication"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/clubapplications/{id}": {
            "get": {
                "description": "get clubapplication by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a clubapplication entity by ID",
                "operationId": "get-clubapplication",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Clubapplication ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Club ID",
                        "name": "cid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ClabappStatus ID",
                        "name": "sid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Clubapplication"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update clubapplication by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a clubapplication entity by ID",
                "operationId": "update-clubapplication",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Clubapplication ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Clubapplication entity",
                        "name": "clubapplication",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Clubapplication"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Clubapplication"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get clubapplication by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a clubapplication entity by ID",
                "operationId": "delete-clubapplication",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Clubapplication ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/clubappstatuss": {
            "get": {
                "description": "list clubappstatus entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List clubappstatus entities",
                "operationId": "list-clubappstatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ClubappStatus"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create clubappstatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create clubappstatus",
                "operationId": "create-clubappstatus",
                "parameters": [
                    {
                        "description": "ClubappStatus entity",
                        "name": "clubappstatus",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ClubappStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ClubappStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/clubappstatuss/{id}": {
            "get": {
                "description": "get clubappstatus by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a clubappstatus entity by ID",
                "operationId": "get-clubappstatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ClubappStatus ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ClubappStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update clubappstatus by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a clubappstatus entity by ID",
                "operationId": "update-clubappstatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ClubappStatus ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ClubappStatus entity",
                        "name": "clubappstatus",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ClubappStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ClubappStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get clubappstatus by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a clubappstatus entity by ID",
                "operationId": "delete-clubappstatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ClubappStatus ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/clubbranch": {
            "get": {
                "description": "list clubbranch entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List clubbranch entities",
                "operationId": "list-clubbranch",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ClubBranch"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create clubbranch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create ClubBranch",
                "operationId": "create-clubbranch",
                "parameters": [
                    {
                        "description": "ClubBranch entity",
                        "name": "clubbranch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ClubBranch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ClubBranch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/clubbranch/{id}": {
            "get": {
                "description": "get clubbranch by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a clubbranch entity by ID",
                "operationId": "get-clubbranch",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ClubBranch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ClubBranch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update clubbranch by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a clubbranch entity by ID",
                "operationId": "update-clubbranch",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ClubBranch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ClubBranch entity",
                        "name": "clubbranch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ClubBranch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ClubBranch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get clubbranch by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a clubbranch entity by ID",
                "operationId": "delete-clubbranch",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ClubBranch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/clubtype": {
            "get": {
                "description": "list clubtype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List clubtype entities",
                "operationId": "list-clubtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ClubType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create clubtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create ClubType",
                "operationId": "create-clubtype",
                "parameters": [
                    {
                        "description": "ClubType entity",
                        "name": "clubtype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ClubType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ClubType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/clubtype/{id}": {
            "get": {
                "description": "get clubtype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a clubtype entity by ID",
                "operationId": "get-clubtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ClubType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ClubType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update clubtype by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a clubtype entity by ID",
                "operationId": "update-clubtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ClubType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ClubType entity",
                        "name": "clubtype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ClubType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ClubType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get clubtype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a clubtype entity by ID",
                "operationId": "delete-clubtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ClubType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/complaints": {
            "get": {
                "description": "list complaint entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List complaint entities",
                "operationId": "list-complaint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Complaint"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create complaint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create complaint",
                "operationId": "create-complaint",
                "parameters": [
                    {
                        "description": "Complaint entity",
                        "name": "complaint",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Complaint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Complaint"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/complaints/{id}": {
            "get": {
                "description": "get complaint by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a complaint entity by ID",
                "operationId": "get-complaint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Complaint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Complaint"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update complaint by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a complaint entity by ID",
                "operationId": "update-complaint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Complaint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Complaint entity",
                        "name": "complaint",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Complaint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Complaint"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get complaint by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a complaint entity by ID",
                "operationId": "delete-complaint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Complaint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/complainttypes": {
            "get": {
                "description": "list complainttype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List complainttype entities",
                "operationId": "list-complainttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ComplaintType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create complainttype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create complainttype",
                "operationId": "create-complainttype",
                "parameters": [
                    {
                        "description": "Complainttype entity",
                        "name": "complainttype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Complainttype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ComplaintType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/complainttypes/{id}": {
            "get": {
                "description": "get complainttype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a complainttype entity by ID",
                "operationId": "get-complainttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Complainttype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ComplaintType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update complainttype by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a complainttype entity by ID",
                "operationId": "update-complainttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Complainttype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Complainttype entity",
                        "name": "complainttype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ComplaintType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ComplaintType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get complainttype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a complainttype entity by ID",
                "operationId": "delete-complainttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Complainttype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/disciplines": {
            "get": {
                "description": "list discipline entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List discipline entities",
                "operationId": "list-discipline",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Discipline"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create discipline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create discipline",
                "operationId": "create-discipline",
                "parameters": [
                    {
                        "description": "Discipline entity",
                        "name": "discipline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Discipline"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Discipline"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/disciplines/{id}": {
            "get": {
                "description": "get discipline by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a discipline entity by ID",
                "operationId": "get-discipline",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Discipline ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Discipline"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update discipline by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a discipline entity by ID",
                "operationId": "update-discipline",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Discipline ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Discipline entity",
                        "name": "discipline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Discipline"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Discipline"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get discipline by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a discipline entity by ID",
                "operationId": "delete-discipline",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Discipline ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/genders": {
            "get": {
                "description": "list gender entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List gender entities",
                "operationId": "list-gender",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Gender"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create gender",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create gender",
                "operationId": "create-gender",
                "parameters": [
                    {
                        "description": "Gender entity",
                        "name": "gender",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Gender"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Gender"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/genders/{id}": {
            "get": {
                "description": "get gender by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a gender entity by ID",
                "operationId": "get-gender",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gender ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Gender"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update gender by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a gender entity by ID",
                "operationId": "update-gender",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gender ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Gender entity",
                        "name": "gender",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Gender"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Gender"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get gender by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a gender entity by ID",
                "operationId": "delete-gender",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gender ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/purposes": {
            "get": {
                "description": "list purpose entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List purpose entities",
                "operationId": "list-purpose",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Purpose"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create purpose",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create purpose",
                "operationId": "create-purpose",
                "parameters": [
                    {
                        "description": "Purpose entity",
                        "name": "purpose",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Purpose"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Purpose"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/purposes/{id}": {
            "get": {
                "description": "get purpose by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a purpose entity by ID",
                "operationId": "get-purpose",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Purpose ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Purpose"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update purpose by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a purpose entity by ID",
                "operationId": "update-purpose",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Purpose ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Purpose entity",
                        "name": "purpose",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Purpose"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Purpose"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get purpose by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a purpose entity by ID",
                "operationId": "delete-purpose",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Purpose ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "description": "list room entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List room entities",
                "operationId": "list-room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Room"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create room",
                "operationId": "create-room",
                "parameters": [
                    {
                        "description": "Room entity",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Room"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Room"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/rooms/{id}": {
            "get": {
                "description": "get room by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a room entity by ID",
                "operationId": "get-room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Room"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update room by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a room entity by ID",
                "operationId": "update-room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Room entity",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Room"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Room"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get room by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a room entity by ID",
                "operationId": "delete-room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/roomuses": {
            "get": {
                "description": "list roomuse entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List roomuse entities",
                "operationId": "list-roomuse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Roomuse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create roomuse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create roomuse",
                "operationId": "create-roomuse",
                "parameters": [
                    {
                        "description": "Roomuse entity",
                        "name": "roomuse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Roomuse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Roomuse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/roomuses/{id}": {
            "get": {
                "description": "get roomuse by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a roomuse entity by ID",
                "operationId": "get-roomuse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roomuse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Roomuse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get roomuse by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a roomuse entity by ID",
                "operationId": "delete-roomuse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roomuse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "list user entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List user entities",
                "operationId": "list-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create user",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "User entity",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "get user by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a user entity by ID",
                "operationId": "get-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a user entity by ID",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User entity",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get user by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a user entity by ID",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/userstatuss": {
            "get": {
                "description": "list userstatus entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List userstatus entities",
                "operationId": "list-userstatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.UserStatus"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create userstatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create userstatus",
                "operationId": "create-userstatus",
                "parameters": [
                    {
                        "description": "UserStatus entity",
                        "name": "userstatus",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.UserStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.UserStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/userstatuss/{id}": {
            "get": {
                "description": "get userstatus by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a userstatus entity by ID",
                "operationId": "get-userstatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "UserStatus ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.UserStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update userstatus by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a userstatus entity by ID",
                "operationId": "update-userstatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "UserStatus ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UserStatus entity",
                        "name": "userstatus",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.UserStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.UserStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get userstatus by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a userstatus entity by ID",
                "operationId": "delete-userstatus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "UserStatus ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/usertypes": {
            "get": {
                "description": "list usertype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List usertype entities",
                "operationId": "list-usertype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Usertype"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create usertype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create usertype",
                "operationId": "create-usertype",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Usertype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/usertypes/{id}": {
            "get": {
                "description": "get usertype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a usertype entity by ID",
                "operationId": "get-usertype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Usertype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Usertype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update usertype by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a usertype entity by ID",
                "operationId": "update-usertype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Usertype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Usertype entity",
                        "name": "usertype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Usertype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Usertype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/years": {
            "get": {
                "description": "list year entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List year entities",
                "operationId": "list-year",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Year"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create year",
                "operationId": "create-year",
                "parameters": [
                    {
                        "description": "Year entity",
                        "name": "year",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Year"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Year"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/years/{id}": {
            "get": {
                "description": "get year by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a year entity by ID",
                "operationId": "get-year",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Year ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Year"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update year by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a year entity by ID",
                "operationId": "update-year",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Year ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Year entity",
                        "name": "year",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Year"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Year"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get year by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a year entity by ID",
                "operationId": "delete-year",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Year ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.Clubapplication": {
            "type": "object",
            "properties": {
                "addedtime": {
                    "type": "string"
                },
                "adderAge": {
                    "type": "integer"
                },
                "adderGender": {
                    "type": "string"
                },
                "adderName": {
                    "type": "string"
                },
                "appstatusID": {
                    "type": "integer"
                },
                "clubID": {
                    "type": "integer"
                },
                "contact": {
                    "type": "string"
                },
                "discipline": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "controllers.Complaint": {
            "type": "object",
            "properties": {
                "clubID": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "typeID": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "controllers.Complainttype": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "controllers.Roomuse": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string"
                },
                "inTime": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "outTime": {
                    "type": "string"
                },
                "people": {
                    "type": "integer"
                },
                "purposeID": {
                    "type": "integer"
                },
                "roomID": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "ent.AcademicYear": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the AcademicYearQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.AcademicYearEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "semester": {
                    "description": "Semester holds the value of the \"semester\" field.",
                    "type": "string"
                }
            }
        },
        "ent.AcademicYearEdges": {
            "type": "object",
            "properties": {
                "activities": {
                    "description": "Activities holds the value of the activities edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Activities"
                    }
                }
            }
        },
        "ent.Activities": {
            "type": "object",
            "properties": {
                "academicYearID": {
                    "type": "integer"
                },
                "activityTypeID": {
                    "type": "integer"
                },
                "clubID": {
                    "type": "integer"
                },
                "detail": {
                    "description": "Detail holds the value of the \"detail\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ActivitiesQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ActivitiesEdges"
                },
                "endtime": {
                    "description": "Endtime holds the value of the \"endtime\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "location": {
                    "description": "Location holds the value of the \"location\" field.",
                    "type": "string"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "starttime": {
                    "description": "Starttime holds the value of the \"starttime\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ActivitiesEdges": {
            "type": "object",
            "properties": {
                "academicyear": {
                    "description": "Academicyear holds the value of the academicyear edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.AcademicYear"
                },
                "activitytype": {
                    "description": "Activitytype holds the value of the activitytype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ActivityType"
                },
                "club": {
                    "description": "Club holds the value of the club edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Club"
                }
            }
        },
        "ent.ActivityType": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ActivityTypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ActivityTypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ActivityTypeEdges": {
            "type": "object",
            "properties": {
                "activities": {
                    "description": "Activities holds the value of the activities edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Activities"
                    }
                }
            }
        },
        "ent.Club": {
            "type": "object",
            "properties": {
                "clubBranch_ID": {
                    "type": "integer"
                },
                "clubType_ID": {
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ClubQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone holds the value of the \"phone\" field.",
                    "type": "string"
                },
                "purpose": {
                    "description": "Purpose holds the value of the \"purpose\" field.",
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "ent.ClubBranch": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ClubBranchQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubBranchEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ClubBranchEdges": {
            "type": "object",
            "properties": {
                "club": {
                    "description": "Club holds the value of the club edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Club"
                    }
                }
            }
        },
        "ent.ClubEdges": {
            "type": "object",
            "properties": {
                "activities": {
                    "description": "Activities holds the value of the activities edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Activities"
                    }
                },
                "clubToComplaint": {
                    "description": "ClubToComplaint holds the value of the ClubToComplaint edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Complaint"
                    }
                },
                "clubapplication": {
                    "description": "Clubapplication holds the value of the clubapplication edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Clubapplication"
                    }
                },
                "clubbranch": {
                    "description": "Clubbranch holds the value of the clubbranch edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubBranch"
                },
                "clubtype": {
                    "description": "Clubtype holds the value of the clubtype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubType"
                },
                "user": {
                    "description": "User holds the value of the user edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                },
                "userclub": {
                    "description": "Userclub holds the value of the userclub edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.ClubType": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ClubTypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubTypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ClubTypeEdges": {
            "type": "object",
            "properties": {
                "club": {
                    "description": "Club holds the value of the club edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Club"
                    }
                }
            }
        },
        "ent.ClubappStatus": {
            "type": "object",
            "properties": {
                "clubstatus": {
                    "description": "Clubstatus holds the value of the \"clubstatus\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ClubappStatusQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubappStatusEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ClubappStatusEdges": {
            "type": "object",
            "properties": {
                "clubapplication": {
                    "description": "Clubapplication holds the value of the clubapplication edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Clubapplication"
                    }
                }
            }
        },
        "ent.Clubapplication": {
            "type": "object",
            "properties": {
                "addeddatetime": {
                    "description": "Addeddatetime holds the value of the \"addeddatetime\" field.",
                    "type": "string"
                },
                "addername": {
                    "description": "Addername holds the value of the \"addername\" field.",
                    "type": "string"
                },
                "age": {
                    "description": "Age holds the value of the \"age\" field.",
                    "type": "integer"
                },
                "clubID": {
                    "type": "integer"
                },
                "contact": {
                    "description": "Contact holds the value of the \"contact\" field.",
                    "type": "string"
                },
                "discipline": {
                    "description": "Discipline holds the value of the \"discipline\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ClubapplicationQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubapplicationEdges"
                },
                "gender": {
                    "description": "Gender holds the value of the \"gender\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "reason": {
                    "description": "Reason holds the value of the \"reason\" field.",
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                },
                "yaer": {
                    "description": "Yaer holds the value of the \"yaer\" field.",
                    "type": "integer"
                }
            }
        },
        "ent.ClubapplicationEdges": {
            "type": "object",
            "properties": {
                "club": {
                    "description": "Club holds the value of the club edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Club"
                },
                "clubappstatus": {
                    "description": "Clubappstatus holds the value of the clubappstatus edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClubappStatus"
                },
                "owner": {
                    "description": "Owner holds the value of the owner edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Complaint": {
            "type": "object",
            "properties": {
                "clubID": {
                    "type": "integer"
                },
                "date": {
                    "description": "Date holds the value of the \"date\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ComplaintQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ComplaintEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "info": {
                    "description": "Info holds the value of the \"info\" field.",
                    "type": "string"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "phonenumber": {
                    "description": "Phonenumber holds the value of the \"phonenumber\" field.",
                    "type": "string"
                },
                "typeID": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "ent.ComplaintEdges": {
            "type": "object",
            "properties": {
                "complaintToClub": {
                    "description": "ComplaintToClub holds the value of the ComplaintToClub edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Club"
                },
                "complaintToComplaintType": {
                    "description": "ComplaintToComplaintType holds the value of the ComplaintToComplaintType edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ComplaintType"
                },
                "complaintToUser": {
                    "description": "ComplaintToUser holds the value of the ComplaintToUser edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.ComplaintType": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description holds the value of the \"description\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ComplaintTypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ComplaintTypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ComplaintTypeEdges": {
            "type": "object",
            "properties": {
                "complaintTypeToComplaint": {
                    "description": "ComplaintTypeToComplaint holds the value of the ComplaintTypeToComplaint edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Complaint"
                    }
                }
            }
        },
        "ent.Discipline": {
            "type": "object",
            "properties": {
                "discipline": {
                    "description": "Discipline holds the value of the \"discipline\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DisciplineQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DisciplineEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.DisciplineEdges": {
            "type": "object",
            "properties": {
                "users": {
                    "description": "Users holds the value of the users edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.Gender": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the GenderQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.GenderEdges"
                },
                "gender": {
                    "description": "Gender holds the value of the \"gender\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.GenderEdges": {
            "type": "object",
            "properties": {
                "users": {
                    "description": "Users holds the value of the users edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.Position": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PositionQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PositionEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PositionEdges": {
            "type": "object",
            "properties": {
                "users": {
                    "description": "Users holds the value of the users edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.Purpose": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PurposeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PurposeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "purpose": {
                    "description": "Purpose holds the value of the \"purpose\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PurposeEdges": {
            "type": "object",
            "properties": {
                "roomuses": {
                    "description": "Roomuses holds the value of the roomuses edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Roomuse"
                    }
                }
            }
        },
        "ent.Room": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RoomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RoomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "max_contain": {
                    "description": "MaxContain holds the value of the \"max_contain\" field.",
                    "type": "integer"
                },
                "room_floor": {
                    "description": "RoomFloor holds the value of the \"room_floor\" field.",
                    "type": "string"
                },
                "room_location": {
                    "description": "RoomLocation holds the value of the \"room_location\" field.",
                    "type": "string"
                },
                "room_name": {
                    "description": "RoomName holds the value of the \"room_name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.RoomEdges": {
            "type": "object",
            "properties": {
                "roomuses": {
                    "description": "Roomuses holds the value of the roomuses edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Roomuse"
                    }
                }
            }
        },
        "ent.Roomuse": {
            "type": "object",
            "properties": {
                "contact": {
                    "description": "Contact holds the value of the \"contact\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RoomuseQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RoomuseEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "in_time": {
                    "description": "InTime holds the value of the \"in_time\" field.",
                    "type": "string"
                },
                "note": {
                    "description": "Note holds the value of the \"note\" field.",
                    "type": "string"
                },
                "out_time": {
                    "description": "OutTime holds the value of the \"out_time\" field.",
                    "type": "string"
                },
                "people": {
                    "description": "People holds the value of the \"people\" field.",
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "ent.RoomuseEdges": {
            "type": "object",
            "properties": {
                "purposes": {
                    "description": "Purposes holds the value of the purposes edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Purpose"
                },
                "rooms": {
                    "description": "Rooms holds the value of the rooms edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Room"
                },
                "users": {
                    "description": "Users holds the value of the users edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.User": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "Age holds the value of the \"age\" field.",
                    "type": "integer"
                },
                "clubID": {
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the UserQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.UserEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                },
                "position_ID": {
                    "type": "integer"
                },
                "userTypeID": {
                    "type": "integer"
                }
            }
        },
        "ent.UserEdges": {
            "type": "object",
            "properties": {
                "club": {
                    "description": "Club holds the value of the club edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Club"
                    }
                },
                "clubapplication": {
                    "description": "Clubapplication holds the value of the clubapplication edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Clubapplication"
                    }
                },
                "discipline": {
                    "description": "Discipline holds the value of the discipline edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Discipline"
                },
                "fromClub": {
                    "description": "FromClub holds the value of the FromClub edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Club"
                },
                "gender": {
                    "description": "Gender holds the value of the gender edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Gender"
                },
                "position": {
                    "description": "Position holds the value of the position edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Position"
                },
                "roomuse": {
                    "description": "Roomuse holds the value of the Roomuse edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Roomuse"
                    }
                },
                "userToComplaint": {
                    "description": "UserToComplaint holds the value of the UserToComplaint edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Complaint"
                    }
                },
                "userstatus": {
                    "description": "Userstatus holds the value of the userstatus edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.UserStatus"
                },
                "usertype": {
                    "description": "Usertype holds the value of the usertype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Usertype"
                },
                "year": {
                    "description": "Year holds the value of the year edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Year"
                }
            }
        },
        "ent.UserStatus": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the UserStatusQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.UserStatusEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "userstatus": {
                    "description": "Userstatus holds the value of the \"userstatus\" field.",
                    "type": "string"
                }
            }
        },
        "ent.UserStatusEdges": {
            "type": "object",
            "properties": {
                "users": {
                    "description": "Users holds the value of the users edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.Usertype": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the UsertypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.UsertypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.UsertypeEdges": {
            "type": "object",
            "properties": {
                "user": {
                    "description": "User holds the value of the user edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.Year": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the YearQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.YearEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "year": {
                    "description": "Year holds the value of the \"year\" field.",
                    "type": "integer"
                }
            }
        },
        "ent.YearEdges": {
            "type": "object",
            "properties": {
                "users": {
                    "description": "Users holds the value of the users edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "SUT SA Example API",
	Description: "This is a sample server for SUT SE 2563",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
