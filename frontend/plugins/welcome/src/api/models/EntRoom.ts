/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntRoomEdges,
    EntRoomEdgesFromJSON,
    EntRoomEdgesFromJSONTyped,
    EntRoomEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntRoom
 */
export interface EntRoom {
    /**
     * 
     * @type {EntRoomEdges}
     * @memberof EntRoom
     */
    edges?: EntRoomEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntRoom
     */
    id?: number;
    /**
     * MaxContain holds the value of the "max_contain" field.
     * @type {number}
     * @memberof EntRoom
     */
    maxContain?: number;
    /**
     * RoomFloor holds the value of the "room_floor" field.
     * @type {string}
     * @memberof EntRoom
     */
    roomFloor?: string;
    /**
     * RoomLocation holds the value of the "room_location" field.
     * @type {string}
     * @memberof EntRoom
     */
    roomLocation?: string;
    /**
     * RoomName holds the value of the "room_name" field.
     * @type {string}
     * @memberof EntRoom
     */
    roomName?: string;
}

export function EntRoomFromJSON(json: any): EntRoom {
    return EntRoomFromJSONTyped(json, false);
}

export function EntRoomFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntRoom {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'edges': !exists(json, 'edges') ? undefined : EntRoomEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'maxContain': !exists(json, 'max_contain') ? undefined : json['max_contain'],
        'roomFloor': !exists(json, 'room_floor') ? undefined : json['room_floor'],
        'roomLocation': !exists(json, 'room_location') ? undefined : json['room_location'],
        'roomName': !exists(json, 'room_name') ? undefined : json['room_name'],
    };
}

export function EntRoomToJSON(value?: EntRoom | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'edges': EntRoomEdgesToJSON(value.edges),
        'id': value.id,
        'max_contain': value.maxContain,
        'room_floor': value.roomFloor,
        'room_location': value.roomLocation,
        'room_name': value.roomName,
    };
}


