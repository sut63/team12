/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ControllersComplaint
 */
export interface ControllersComplaint {
    /**
     * 
     * @type {number}
     * @memberof ControllersComplaint
     */
    clubID?: number;
    /**
     * 
     * @type {string}
     * @memberof ControllersComplaint
     */
    date?: string;
    /**
     * 
     * @type {string}
     * @memberof ControllersComplaint
     */
    info?: string;
    /**
     * 
     * @type {string}
     * @memberof ControllersComplaint
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ControllersComplaint
     */
    phoneNumber?: string;
    /**
     * 
     * @type {number}
     * @memberof ControllersComplaint
     */
    typeID?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersComplaint
     */
    userID?: number;
}

export function ControllersComplaintFromJSON(json: any): ControllersComplaint {
    return ControllersComplaintFromJSONTyped(json, false);
}

export function ControllersComplaintFromJSONTyped(json: any, ignoreDiscriminator: boolean): ControllersComplaint {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'clubID': !exists(json, 'clubID') ? undefined : json['clubID'],
        'date': !exists(json, 'date') ? undefined : json['date'],
        'info': !exists(json, 'info') ? undefined : json['info'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'typeID': !exists(json, 'typeID') ? undefined : json['typeID'],
        'userID': !exists(json, 'userID') ? undefined : json['userID'],
    };
}

export function ControllersComplaintToJSON(value?: ControllersComplaint | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'clubID': value.clubID,
        'date': value.date,
        'info': value.info,
        'name': value.name,
        'phoneNumber': value.phoneNumber,
        'typeID': value.typeID,
        'userID': value.userID,
    };
}


