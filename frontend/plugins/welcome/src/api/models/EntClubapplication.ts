/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntClubapplicationEdges,
    EntClubapplicationEdgesFromJSON,
    EntClubapplicationEdgesFromJSONTyped,
    EntClubapplicationEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntClubapplication
 */
export interface EntClubapplication {
    /**
     * Addeddatetime holds the value of the "addeddatetime" field.
     * @type {string}
     * @memberof EntClubapplication
     */
    addeddatetime?: string;
    /**
     * Addername holds the value of the "addername" field.
     * @type {string}
     * @memberof EntClubapplication
     */
    addername?: string;
    /**
     * Age holds the value of the "age" field.
     * @type {number}
     * @memberof EntClubapplication
     */
    age?: number;
    /**
     * 
     * @type {number}
     * @memberof EntClubapplication
     */
    clubID?: number;
    /**
     * Contact holds the value of the "contact" field.
     * @type {string}
     * @memberof EntClubapplication
     */
    contact?: string;
    /**
     * Discipline holds the value of the "discipline" field.
     * @type {string}
     * @memberof EntClubapplication
     */
    discipline?: string;
    /**
     * 
     * @type {EntClubapplicationEdges}
     * @memberof EntClubapplication
     */
    edges?: EntClubapplicationEdges;
    /**
     * Gender holds the value of the "gender" field.
     * @type {string}
     * @memberof EntClubapplication
     */
    gender?: string;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntClubapplication
     */
    id?: number;
    /**
     * Reason holds the value of the "reason" field.
     * @type {string}
     * @memberof EntClubapplication
     */
    reason?: string;
    /**
     * 
     * @type {number}
     * @memberof EntClubapplication
     */
    userID?: number;
    /**
     * Yaer holds the value of the "yaer" field.
     * @type {number}
     * @memberof EntClubapplication
     */
    yaer?: number;
}

export function EntClubapplicationFromJSON(json: any): EntClubapplication {
    return EntClubapplicationFromJSONTyped(json, false);
}

export function EntClubapplicationFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntClubapplication {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'addeddatetime': !exists(json, 'addeddatetime') ? undefined : json['addeddatetime'],
        'addername': !exists(json, 'addername') ? undefined : json['addername'],
        'age': !exists(json, 'age') ? undefined : json['age'],
        'clubID': !exists(json, 'clubID') ? undefined : json['clubID'],
        'contact': !exists(json, 'contact') ? undefined : json['contact'],
        'discipline': !exists(json, 'discipline') ? undefined : json['discipline'],
        'edges': !exists(json, 'edges') ? undefined : EntClubapplicationEdgesFromJSON(json['edges']),
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
        'userID': !exists(json, 'userID') ? undefined : json['userID'],
        'yaer': !exists(json, 'yaer') ? undefined : json['yaer'],
    };
}

export function EntClubapplicationToJSON(value?: EntClubapplication | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'addeddatetime': value.addeddatetime,
        'addername': value.addername,
        'age': value.age,
        'clubID': value.clubID,
        'contact': value.contact,
        'discipline': value.discipline,
        'edges': EntClubapplicationEdgesToJSON(value.edges),
        'gender': value.gender,
        'id': value.id,
        'reason': value.reason,
        'userID': value.userID,
        'yaer': value.yaer,
    };
}


