/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntComplaintEdges,
    EntComplaintEdgesFromJSON,
    EntComplaintEdgesFromJSONTyped,
    EntComplaintEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntComplaint
 */
export interface EntComplaint {
    /**
     * 
     * @type {number}
     * @memberof EntComplaint
     */
    clubID?: number;
    /**
     * Date holds the value of the "date" field.
     * @type {string}
     * @memberof EntComplaint
     */
    date?: string;
    /**
     * 
     * @type {EntComplaintEdges}
     * @memberof EntComplaint
     */
    edges?: EntComplaintEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntComplaint
     */
    id?: number;
    /**
     * Info holds the value of the "info" field.
     * @type {string}
     * @memberof EntComplaint
     */
    info?: string;
    /**
     * Name holds the value of the "name" field.
     * @type {string}
     * @memberof EntComplaint
     */
    name?: string;
    /**
     * Phonenumber holds the value of the "phonenumber" field.
     * @type {string}
     * @memberof EntComplaint
     */
    phonenumber?: string;
    /**
     * 
     * @type {number}
     * @memberof EntComplaint
     */
    typeID?: number;
    /**
     * 
     * @type {number}
     * @memberof EntComplaint
     */
    userID?: number;
}

export function EntComplaintFromJSON(json: any): EntComplaint {
    return EntComplaintFromJSONTyped(json, false);
}

export function EntComplaintFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntComplaint {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'clubID': !exists(json, 'clubID') ? undefined : json['clubID'],
        'date': !exists(json, 'date') ? undefined : json['date'],
        'edges': !exists(json, 'edges') ? undefined : EntComplaintEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'info': !exists(json, 'info') ? undefined : json['info'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'phonenumber': !exists(json, 'phonenumber') ? undefined : json['phonenumber'],
        'typeID': !exists(json, 'typeID') ? undefined : json['typeID'],
        'userID': !exists(json, 'userID') ? undefined : json['userID'],
    };
}

export function EntComplaintToJSON(value?: EntComplaint | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'clubID': value.clubID,
        'date': value.date,
        'edges': EntComplaintEdgesToJSON(value.edges),
        'id': value.id,
        'info': value.info,
        'name': value.name,
        'phonenumber': value.phonenumber,
        'typeID': value.typeID,
        'userID': value.userID,
    };
}


