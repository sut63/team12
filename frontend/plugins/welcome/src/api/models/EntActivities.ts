/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntActivitiesEdges,
    EntActivitiesEdgesFromJSON,
    EntActivitiesEdgesFromJSONTyped,
    EntActivitiesEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntActivities
 */
export interface EntActivities {
    /**
     * 
     * @type {number}
     * @memberof EntActivities
     */
    academicYearID?: number;
    /**
     * 
     * @type {number}
     * @memberof EntActivities
     */
    activityTypeID?: number;
    /**
     * 
     * @type {number}
     * @memberof EntActivities
     */
    clubID?: number;
    /**
     * Detail holds the value of the "detail" field.
     * @type {string}
     * @memberof EntActivities
     */
    detail?: string;
    /**
     * 
     * @type {EntActivitiesEdges}
     * @memberof EntActivities
     */
    edges?: EntActivitiesEdges;
    /**
     * Endtime holds the value of the "endtime" field.
     * @type {string}
     * @memberof EntActivities
     */
    endtime?: string;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntActivities
     */
    id?: number;
    /**
     * Location holds the value of the "location" field.
     * @type {string}
     * @memberof EntActivities
     */
    location?: string;
    /**
     * Name holds the value of the "name" field.
     * @type {string}
     * @memberof EntActivities
     */
    name?: string;
    /**
     * Starttime holds the value of the "starttime" field.
     * @type {string}
     * @memberof EntActivities
     */
    starttime?: string;
}

export function EntActivitiesFromJSON(json: any): EntActivities {
    return EntActivitiesFromJSONTyped(json, false);
}

export function EntActivitiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntActivities {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'academicYearID': !exists(json, 'academicYearID') ? undefined : json['academicYearID'],
        'activityTypeID': !exists(json, 'activityTypeID') ? undefined : json['activityTypeID'],
        'clubID': !exists(json, 'clubID') ? undefined : json['clubID'],
        'detail': !exists(json, 'detail') ? undefined : json['detail'],
        'edges': !exists(json, 'edges') ? undefined : EntActivitiesEdgesFromJSON(json['edges']),
        'endtime': !exists(json, 'endtime') ? undefined : json['endtime'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'location': !exists(json, 'location') ? undefined : json['location'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'starttime': !exists(json, 'starttime') ? undefined : json['starttime'],
    };
}

export function EntActivitiesToJSON(value?: EntActivities | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'academicYearID': value.academicYearID,
        'activityTypeID': value.activityTypeID,
        'clubID': value.clubID,
        'detail': value.detail,
        'edges': EntActivitiesEdgesToJSON(value.edges),
        'endtime': value.endtime,
        'id': value.id,
        'location': value.location,
        'name': value.name,
        'starttime': value.starttime,
    };
}


